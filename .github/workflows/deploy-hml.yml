name: Deploy das alterações para GalmoBox
on:
  pull_request:
    types: [closed]
    branches:
      - GalmoBox
    paths:
      - 'force-app/**'
jobs:
  merge_deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Instalar dependências do sistema e do Salesforce CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl jq
          npm install @salesforce/cli --global

      - name: Autenticar com a org GalmoBox
        run: |
          echo "${{ secrets.AUTH_URL_HML }}" > sfdx-auth-url.txt
          sf org login sfdx-url -f sfdx-auth-url.txt --alias hml

      - name: Instalar plugin sfdx-git-delta
        run: echo "y" | sf plugins install sfdx-git-delta

      - name: Criar diretório de saída para o pacote delta
        run: mkdir -p deploy

      - name: Gerar pacote delta no diretório deploy
        run: |
          sf sgd source delta --from HEAD^ --to HEAD --output-dir deploy

      - name: Definir nome do artefato com org, data e hora
        id: set-artifact-name
        run: |
          ORG_NAME="GalmoBox"
          export TZ="America/Sao_Paulo"
          TIMESTAMP=$(date +'%d-%m-%Y--%H-%M-%S')
          echo "PACKAGE_XML_ARTIFACT=${ORG_NAME}_Package_xml_${TIMESTAMP}" >> $GITHUB_OUTPUT
          echo "DEPLOY_LOG_ARTIFACT=${ORG_NAME}_Deploy_log_${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: Listar conteúdo do diretório deploy
        run: ls -R deploy
      - name: Exibir conteúdo do package.xml
        run: cat deploy/package/package.xml
      - name: Implantar usando o pacote delta gerado
        run: |
              sf project deploy start --manifest deploy/package/package.xml --dry-run --test-level RunSpecifiedTests --tests AccountControllerTest,AccountDATest,AccountHelperTest,ChecklistDATest,ChecklistHelperTest,ChecklistControllerTest,ChecklistTrigggerHandlerTest,ContractSelectorTest,ContractControllerTest,ContratoServiceTest,ContractDATest,ContractHelperTest,ContractTriggerHandlerTest,DocumentacaoDATest,DocumentControllerTest,DocumentacaoHelperTest,QuoteDATest,QuoteHelper,QuoteHelperTest,QueryHelperTest,QuoteLineItemHelper,QuoteLineItemHelperTest,QuoteLineItemTriggerHandler,QuoteLineItemTriggerHandlerTest,QuoteSyncHelper,QuoteSyncHelperTest,SalesTeamControllerTest,QuoteSyncTriggerHandler,QuoteSyncTriggerHandlerTest,QuoteTriggerHandler,QuoteTriggerHandlerTest,AccountContactRelationHelperTest,AnaliseCreditoHelperTest,AnaliseCreditoTriggerHandlerTest,TriggerHandler_Test,EmailManagerTest,ObjectHelperTest,ObjectControllerTest,OpportunityHelperTest,OpportunityTriggerHandlerTest,GerarContratoControllerTest,OpportunityDATest,IntegrationD4SignTest,AnaliseCreditoDATest,TemplateDocumentoHelperTest,UtilTest,TemplateDocumentoTriggerHandlerTest,TemplateDocumentoDATest,TemplateDocumentoControllerTest,TemplateDocumentoDATest,EmpreendimentoSelectorTest,ComparativoControllerTest,ComparativoServiceTest,EspelhoVendasControllerTest,comissaoControllerTest,CotacaoControllerTest,EspelhoVendasServiceTest,ExtratoTabelaServiceTest,ProdutoSelectorTest,SeriePagamentoSelectorTest,SeriePagamentosServiceTest,SimuladorVendasControllerTest,SeriePagamentosTriggerHandlerTest,SimuladorTelaNegociacaoControllerTest,TabelaVendaHandlerTest,TabelaVendaSelectorTest,TabelaVendasServiceTest,TestDataFactoryTest,TestDataFactorySimuladorTest,UnidadeTabelaSelectorTest,UnidadeTabelaServiceTest,ParametrizarCriterioServiceTest,ParametrizarCriterioControllerTest --target-org prd > deploy/deploy_output.log || true


      - name: Salvar package.xml
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.PACKAGE_XML_ARTIFACT }}
          path: deploy/package/package.xml

      - name: Salvar o Log de Deploy
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.DEPLOY_LOG_ARTIFACT }}
          path: deploy/deploy_output.log
